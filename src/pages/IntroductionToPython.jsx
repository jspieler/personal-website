import React from "react";

import { CodeBlock, dracula } from "react-code-blocks";

import { Article } from "../components/articles/Article";
import { ExternalLink } from "../components/articles/ExternalLink";
import { InlineCode } from "../components/articles/InlineCode";

const IntroductionToPython = () => {
  return (
    <main className="main">
      <Article
        title={"Introduction To Python"}
        subtitle={"Yet Another Python Guide?"}
      >
        <h3 id="what-is-python-and-why-you-should-learn-it">
          What Is Python and Why You Should Learn It
        </h3>
        <p>
          <ExternalLink href="https://www.python.org/">Python</ExternalLink> is
          a high-level programming language created by Guido van Rossum. It was
          released in 1991. Although images of snakes are often associated with
          Python, the name is actually derived from Guido van Rossum's favorite
          TV show, "Monty Python's Flying Circus". Python is an object-oriented
          programming language which is available on a wide variety of systems
          and can be used for a lot of different applications. The current
          version is Python 3, which will be the focus of the following
          explanations. Python is designed to be a beginner-friendly yet
          powerful programming language. In recent years, Python has gained
          increasing popularity, especially due to well-known and robust
          frameworks designed for scientific computing, artificial intelligence,
          and data science. Examples of such frameworks include{" "}
          <ExternalLink href="https://numpy.org/">Numpy</ExternalLink>,{" "}
          <ExternalLink href="https://pandas.pydata.org/">Pandas</ExternalLink>,{" "}
          <ExternalLink href="https://pytorch.org/">PyTorch</ExternalLink> or{" "}
          <ExternalLink href="https://www.tensorflow.org/">
            TensorFlow
          </ExternalLink>
          . Python is also commonly used for automation, prototyping, and even
          web development.
        </p>
        <p>
          Unlike many other programming languages, Python statements do not
          require termination with a special character. The Python interpreter
          identifies the end of a statement through the presence of a newline,
          generated by pressing the "Return" key on the keyboard. We will delve
          into multi-line statements in subsequent sections. Another crucial
          point to note is that Python relies on indentation instead of
          delimiters like curly braces. While the specific amount of indentation
          doesn't hold significance, it must remain consistent within a given
          depth of a loop or conditional statement. Additionally, statements
          that are not intended to be indented must start from the first column.
          However, adhering to the convention outlined in{" "}
          <ExternalLink href="https://peps.python.org/pep-0008/">
            PEP 8
          </ExternalLink>
          , it is recommended to use 4 spaces for indentation, a practice we'll
          explore further in upcoming discussions.
        </p>

        <h3 id="how-to-invoke-python-code">How To Invoke Python Code</h3>
        <p>
          To get started with running Python code on your computer, you'll need
          to install a{" "}
          <ExternalLink href="https://www.python.org/downloads/">
            Python interpreter
          </ExternalLink>{" "}
          which is available for Windows, Linux and Mac OS. Alternatively, you
          can also use{" "}
          <ExternalLink href="https://docs.conda.io/en/latest/">
            Conda
          </ExternalLink>{" "}
          (or one of its variations like MicroConda or Mamba). We'll talk more
          about these options when we discuss virtual environments in a moment.
        </p>
        <p>
          Once Python is installed on your system, there are two main ways to
          start using it. The first method is by opening your shell or command
          prompt and typing "python". This will launch the Python interpreter,
          and you'll see something like this:
          <CodeBlock
            text={`Python 3.11.3 (main, Jun  5 2023, 09:32:32) [GCC 13.1.1 20230429] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>>`}
            language={"bash"}
            showLineNumbers={false}
            theme={dracula}
          />
          The three greater-than signs (">>>") are prompts that indicate you can
          type your commands below them. When you press "Enter", Python will
          execute your command. If you type a command like Python's{" "}
          <InlineCode>print()</InlineCode>, the result will show up on the
          screen, like this: 
          <CodeBlock
            text={`>>> print("Hello World")\nHello World`}
            language={"bash"}
            showLineNumbers={false}
            theme={dracula}
          />
          For longer programs, you can use your preferred
          text editor or Integrated Development Environment (IDE) to write your
          Python code. The common file extension for Python files is ".py". To
          run your program, type "python" followed by the name or path of your
          file. Most modern IDEs also offer a "run" button that you can click.
        </p>
        <p>
          One of the great advantages of Python is its easy-to-use libraries and
          external packages. Since many people use Python, there's a wide
          variety of pre-built packages available for many different tasks. The
          Python Package Index (
          <ExternalLink href="https://pypi.org/">PyPI</ExternalLink>) is a
          collection of software for Python that offers numerous packages. You
          can install Python packages from PyPI using a package management tool
          called "pip".
        </p>
        <p>
          However, Python is not great at dependency management. This is why
          nearly every Python user recommends to use virtual environments.
          Virtual environments are a Python tool for dependency management and
          project isolation. They provide a simple solution for a lot of
          potential problems by helping you to:
          <div>
            <ul>
              <li>Resolve dependency issues</li>
              <li>Create self-contained and reproducible projects</li>
              <li>Avoid system pollution</li>
              <li>Install packages without admin rights</li>
            </ul>
          </div>
          There are various approaches to creating a virtual environment. One
          option is to use{" "}
          <ExternalLink href="https://docs.python.org/3/library/venv.html">
            venv
          </ExternalLink>
          , a built-in tool in Python. External tools like virtualenv or Conda
          are also commonly used. Conda provides an alternative package and
          environment management approach. It not only enables easy creation of
          virtual environments with different Python versions but also
          introduces an additional feature set. It's worth noting that Conda is
          a separate project and is unrelated to pip. It uses an alternative
          package index maintained by the Anaconda project instead of PyPI.
          Conda packages can be installed using the command "conda install". As
          an alternative,{" "}
          <ExternalLink href="https://www.docker.com/">Docker</ExternalLink> can
          also be used to create a containerized Python development environment.
          Docker allows you to package your Python application along with its
          dependencies and system configurations, ensuring consistency across
          different environments.
        </p>

        <h3 id="variables">Variables</h3>
        <p>
          <iframe
            src="https://trinket.io/embed/python/3d8d7ce66b"
            width="100%"
            height="356"
            frameborder="0"
            marginwidth="0"
            marginheight="0"
            allowfullscreen
            // can we somehow set the color scheme?
          ></iframe>
        </p>
      </Article>
    </main>
  );
};

export { IntroductionToPython };
